===== test1 =====
15
===== test2 =====
[let,sum_seq,:,int,->,int,=,fix,f,(,n,:,int,),:,int,->,if,n,<=,0,then,0,else,n,+,f,(,n,-,1,),in,sum_seq,(,5,)]
===== test3 =====
let sum_seq : (int -> int) = fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) in sum_seq (5)
===== test4 =====
-> let sum_seq : (int -> int) = fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) in sum_seq (5)
-> fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (5)
-> if 5 <= 0 then 0 else 5 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (5 - 1)
-> if false then 0 else 5 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (5 - 1)
-> 5 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (4)
-> 5 + if 4 <= 0 then 0 else 4 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (4 - 1)
-> 5 + if false then 0 else 4 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (4 - 1)
-> 5 + 4 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (3)
-> 5 + 4 + if 3 <= 0 then 0 else 3 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (3 - 1)
-> 5 + 4 + if false then 0 else 3 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (3 - 1)
-> 5 + 4 + 3 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (2)
-> 5 + 4 + 3 + if 2 <= 0 then 0 else 2 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (2 - 1)
-> 5 + 4 + 3 + if false then 0 else 2 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (2 - 1)
-> 5 + 4 + 3 + 2 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (1)
-> 5 + 4 + 3 + 2 + if 1 <= 0 then 0 else 1 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (1 - 1)
-> 5 + 4 + 3 + 2 + if false then 0 else 1 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (1 - 1)
-> 5 + 4 + 3 + 2 + 1 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (0)
-> 5 + 4 + 3 + 2 + 1 + if 0 <= 0 then 0 else 0 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (0 - 1)
-> 5 + 4 + 3 + 2 + 1 + if true then 0 else 0 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (0 - 1)
-> 5 + 4 + 3 + 2 + 1 + 0
-> 5 + 4 + 3 + 2 + 1
-> 5 + 4 + 3 + 3
-> 5 + 4 + 6
-> 5 + 10
-> 15
===== test5 =====
0
===== test6 =====
[3,/,2,+,5,-,6,*,2]
===== test7 =====
3 / 2 + 5 - 6 * 2
===== test8 =====
-> 3 / 2 + 5 - 6 * 2
-> 3 / 2 + 5 - 12
-> 3 / 2 + -7
-> 3 / -5
-> 0
===== test9 =====
38
===== test10 =====
[if,5,<=,3,then,100,-,5,else,33,+,5]
===== test11 =====
if 5 <= 3 then 100 - 5 else 33 + 5
===== test12 =====
-> if 5 <= 3 then 100 - 5 else 33 + 5
-> if false then 100 - 5 else 33 + 5
-> 38
===== test13 =====
1
===== test14 =====
[if,3,<=,4,then,if,true,then,1,else,2,else,2,+,3]
===== test15 =====
if 3 <= 4 then if true then 1 else 2 else 2 + 3
===== test16 =====
-> if 3 <= 4 then if true then 1 else 2 else 2 + 3
-> if true then if true then 1 else 2 else 2 + 3
-> 1
===== test17 =====
15
===== test18 =====
[let,sum_seq,:,int,->,int,=,fix,f,(,n,:,int,),:,int,->,if,n,<=,0,then,0,else,n,+,f,(,n,-,1,),in,sum_seq,(,5,)]
===== test19 =====
let sum_seq : (int -> int) = fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) in sum_seq (5)
===== test20 =====
-> let sum_seq : (int -> int) = fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) in sum_seq (5)
-> fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (5)
-> if 5 <= 0 then 0 else 5 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (5 - 1)
-> if false then 0 else 5 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (5 - 1)
-> 5 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (4)
-> 5 + if 4 <= 0 then 0 else 4 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (4 - 1)
-> 5 + if false then 0 else 4 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (4 - 1)
-> 5 + 4 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (3)
-> 5 + 4 + if 3 <= 0 then 0 else 3 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (3 - 1)
-> 5 + 4 + if false then 0 else 3 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (3 - 1)
-> 5 + 4 + 3 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (2)
-> 5 + 4 + 3 + if 2 <= 0 then 0 else 2 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (2 - 1)
-> 5 + 4 + 3 + if false then 0 else 2 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (2 - 1)
-> 5 + 4 + 3 + 2 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (1)
-> 5 + 4 + 3 + 2 + if 1 <= 0 then 0 else 1 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (1 - 1)
-> 5 + 4 + 3 + 2 + if false then 0 else 1 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (1 - 1)
-> 5 + 4 + 3 + 2 + 1 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (0)
-> 5 + 4 + 3 + 2 + 1 + if 0 <= 0 then 0 else 0 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (0 - 1)
-> 5 + 4 + 3 + 2 + 1 + if true then 0 else 0 + fix f (n:int) : int -> if n <= 0 then 0 else n + f (n - 1) (0 - 1)
-> 5 + 4 + 3 + 2 + 1 + 0
-> 5 + 4 + 3 + 2 + 1
-> 5 + 4 + 3 + 3
-> 5 + 4 + 6
-> 5 + 10
-> 15
===== test21 =====
(143, 37)
===== test22 =====
[(,54,+,89,,,37,)]
===== test23 =====
(54 + 89, 37)
===== test24 =====
-> (54 + 89, 37)
-> (143, 37)
